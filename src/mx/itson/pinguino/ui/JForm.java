/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package mx.itson.pinguino.ui;

import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Collections;
import java.util.Comparator;
import java.util.Date;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import mx.itson.pinguino.entities.Funcion;
import mx.itson.pinguino.entities.Movie;
import mx.itson.pinguino.entities.Sala;
import java.sql.Time;
import java.text.DateFormat;
import java.util.logging.Level;
import java.util.logging.Logger;
/**
 *
 * @author Paola Figueroa
 */
public class JForm extends javax.swing.JFrame {

    /**
     * Creates new form JForm
     */
    public JForm() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblCinemex = new javax.swing.JLabel();
        btnBuscar = new javax.swing.JButton();
        txtBuscar = new javax.swing.JTextField();
        btnAñadir = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        btnDespliegue = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblMovie = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblFuncion = new javax.swing.JTable();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblSala = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lblCinemex.setText("CINEMEX");

        btnBuscar.setText("SEARCH");
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });

        txtBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtBuscarActionPerformed(evt);
            }
        });

        btnAñadir.setText("ADD");
        btnAñadir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAñadirActionPerformed(evt);
            }
        });

        btnDelete.setText("DELETE");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        btnUpdate.setText("UPDATE");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnDespliegue.setText("SHOW");
        btnDespliegue.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDespliegueActionPerformed(evt);
            }
        });

        tblMovie.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "ID", "NAME", "SIPNOSIS", "CATEGORY"
            }
        ));
        jScrollPane1.setViewportView(tblMovie);

        tblFuncion.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "ID", "SALA", "MOVIE", "SCHEDULE", "DATE"
            }
        ));
        jScrollPane2.setViewportView(tblFuncion);

        tblSala.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "ID", "NUMBER", "STATUS"
            }
        ));
        jScrollPane3.setViewportView(tblSala);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(280, 280, 280)
                                .addComponent(lblCinemex))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(21, 21, 21)
                                .addComponent(txtBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(30, 30, 30)
                                .addComponent(btnBuscar)
                                .addGap(112, 112, 112)
                                .addComponent(btnDespliegue)))
                        .addGap(196, 196, 196))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 344, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(118, 118, 118)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnDelete)
                            .addComponent(btnAñadir)
                            .addComponent(btnUpdate))
                        .addGap(62, 62, 62)))
                .addGap(23, 142, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 344, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(75, 75, 75))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(31, 31, 31)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 344, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(512, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(57, 57, 57)
                .addComponent(lblCinemex)
                .addGap(55, 55, 55)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnBuscar)
                    .addComponent(txtBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnDespliegue))
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnAñadir)
                        .addGap(36, 36, 36)
                        .addComponent(btnDelete)
                        .addGap(43, 43, 43)
                        .addComponent(btnUpdate))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 41, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(47, 47, 47))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                    .addContainerGap(420, Short.MAX_VALUE)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(48, 48, 48)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtBuscarActionPerformed

    }//GEN-LAST:event_txtBuscarActionPerformed

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
       try {

    String filtro = txtBuscar.getText();

    List<Movie> movieList = Movie.getAllMovies(filtro);
    DefaultTableModel movieTableModel = (DefaultTableModel) tblMovie.getModel();
    movieTableModel.setRowCount(0);
    for (Movie movie : movieList) {
        Object[] rowData = {movie.getId_movie(), movie.getName(), movie.getCategory()};
        movieTableModel.addRow(rowData);
    }

    List<Sala> salaList = Sala.getAllSalas(filtro);
    DefaultTableModel salaTableModel = (DefaultTableModel) tblSala.getModel();
    salaTableModel.setRowCount(0);
    for (Sala sala : salaList) {
        Object[] rowData = {sala.getId_sala(), sala.getNumber(), sala.getStatus()};
        salaTableModel.addRow(rowData);
    }
    List<Funcion> funcionList = Funcion.getAllFunciones(filtro);
        DefaultTableModel funcionTableModel = (DefaultTableModel) tblFuncion.getModel();
        funcionTableModel.setRowCount(0);
        for (Funcion funcion : funcionList) {
            Object[] rowData = {funcion.getId(), funcion.getId_sala(), funcion.getId_movie(), funcion.getSchedule(), funcion.getDate()};
            funcionTableModel.addRow(rowData);
        }


 } catch (Exception ex) {
            System.err.println("Ocurrió un error al desplegar los datos: " + ex.getMessage());
        }
    }//GEN-LAST:event_btnBuscarActionPerformed

    private void btnDespliegueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDespliegueActionPerformed
       try {
            List<Movie> movieList = Movie.getAllMovies("");
        Collections.sort(movieList, Comparator.comparing(Movie::getName, Comparator.nullsLast(String::compareTo)));
        DefaultTableModel movieTableModel = (DefaultTableModel) tblMovie.getModel();
        movieTableModel.setRowCount(0);
        for (Movie movie : movieList) {
             String name = (movie.getName() != null) ? movie.getName() : "Sin Nombre";
        Object[] rowData = {movie.getId_movie(), name, movie.getSipnosis(), movie.getCategory()};
        movieTableModel.addRow(rowData);

}
         List<Sala> salaList = Sala.getAllSalas("");
         Collections.sort(salaList, Comparator.comparing(Sala::getNumber, Comparator.nullsLast(Integer::compareTo))
                   .thenComparing(Sala::getStatus, Comparator.nullsLast(String::compareTo)));
        DefaultTableModel salaTableModel = (DefaultTableModel) tblSala.getModel();
        salaTableModel.setRowCount(0);
        for (Sala sala : salaList) {
            Object[] rowData = {sala.getId_sala(), sala.getNumber(), sala.getStatus()};
            salaTableModel.addRow(rowData);
        }

          List<Funcion> funcionList = Funcion.getAllFunciones("");
        Collections.sort(funcionList, Comparator.comparing(Funcion::getSchedule, Comparator.nullsLast(Time::compareTo))
                   .thenComparing(Funcion::getDate, Comparator.nullsLast(Date::compareTo)));
        DefaultTableModel funcionTableModel = (DefaultTableModel) tblFuncion.getModel();
        funcionTableModel.setRowCount(0);
       for (Funcion funcion : funcionList) {
            Object[] rowData = {funcion.getId(), funcion.getId_sala(), funcion.getId_movie(), funcion.getSchedule(), funcion.getDate()};
            funcionTableModel.addRow(rowData);
        }
        
        } catch (Exception ex) {
            System.err.println("Ocurrió un error al desplegar los datos: " + ex.getMessage());
        }

    }//GEN-LAST:event_btnDespliegueActionPerformed

    private void btnAñadirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAñadirActionPerformed
       String[] options = {"Película", "Sala", "Función"};
        
        int choice = JOptionPane.showOptionDialog(
                this,
                "Seleccione en cuál tabla desea agregar información:",
                "Selección de Tabla",
                JOptionPane.DEFAULT_OPTION,
                JOptionPane.QUESTION_MESSAGE,
                null,
                options,
                options[0]
        );

        switch (choice) {
            case 0: 
                String movieName = JOptionPane.showInputDialog("Ingrese el nombre de la película:");
                String movieCategory = JOptionPane.showInputDialog("Ingrese la categoría de la película:");
                String movieSipnosis = JOptionPane.showInputDialog("Ingrese la la sipnosis de la pelicula:");
                Movie.addMovie(movieName, movieCategory, movieSipnosis);
                break;
            case 1: 
                int salaNumber = Integer.parseInt(JOptionPane.showInputDialog("Ingrese el número de la sala:"));
                String salaStatus = JOptionPane.showInputDialog("Ingrese el estado de la sala:");
                Sala.addSala(salaNumber, salaStatus);
                break;
            case 2:
                int funcionSalaId = Integer.parseInt(JOptionPane.showInputDialog("Ingrese el ID de la sala para la función:"));
                int funcionMovieId = Integer.parseInt(JOptionPane.showInputDialog("Ingrese el ID de la película para la función:"));
                String funcionSchedule = JOptionPane.showInputDialog("Ingrese el horario de la función:");
                String funcionDate = JOptionPane.showInputDialog("Ingrese la fecha de la función:");

                String formattedTime = funcionSchedule + ":00";
                Time sqlTime = Time.valueOf(formattedTime);
                DateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
                Date parsedDate = null;
           try {
               parsedDate = dateFormat.parse(funcionDate);
           } catch (ParseException ex) {
               Logger.getLogger(JForm.class.getName()).log(Level.SEVERE, null, ex);
           }
                java.sql.Date sqlDate = new java.sql.Date(parsedDate.getTime());

                Funcion.addFuncion(funcionSalaId, funcionMovieId, sqlTime, sqlDate);
                break;

            default:
                break;
        }
   
    }//GEN-LAST:event_btnAñadirActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
      try {
    String filtro = txtBuscar.getText();

    int filaSeleccionadaMovie = tblMovie.getSelectedRow();
    if (filaSeleccionadaMovie != -1) {
        int idPelicula = (int) tblMovie.getValueAt(filaSeleccionadaMovie, 0);
        Movie.deleteMovie(idPelicula);  
 
        DefaultTableModel movieTableModel = (DefaultTableModel) tblMovie.getModel();
        movieTableModel.removeRow(filaSeleccionadaMovie);
    }
 int filaSeleccionadaSala = tblSala.getSelectedRow();
    if (filaSeleccionadaSala != -1) {
        int idSala = (int) tblSala.getValueAt(filaSeleccionadaSala, 0);
        Sala.deleteSala(idSala);  
        
        DefaultTableModel salaTableModel = (DefaultTableModel) tblSala.getModel();
        salaTableModel.removeRow(filaSeleccionadaSala);
    }

    int filaSeleccionadaFuncion = tblFuncion.getSelectedRow();
    if (filaSeleccionadaFuncion != -1) {
        int idFuncion = (int) tblFuncion.getValueAt(filaSeleccionadaFuncion, 0);
        Funcion.deleteFuncion(idFuncion);  

        DefaultTableModel funcionTableModel = (DefaultTableModel) tblFuncion.getModel();
        funcionTableModel.removeRow(filaSeleccionadaFuncion);
    }

} catch (Exception ex) {
    System.err.println("Ocurrió un error: " + ex.getMessage());
}
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
       try {
        int filaSeleccionadaMovie = tblMovie.getSelectedRow();
        int filaSeleccionadaSala = tblSala.getSelectedRow();
        int filaSeleccionadaFuncion = tblFuncion.getSelectedRow();

            if (filaSeleccionadaMovie != -1) {
            int idPelicula = (int) tblMovie.getValueAt(filaSeleccionadaMovie, 0);
            String name = (String) tblMovie.getValueAt(filaSeleccionadaMovie, 1);
            String category = (String) tblMovie.getValueAt(filaSeleccionadaMovie, 3);
            int newId = Integer.parseInt(JOptionPane.showInputDialog("Ingrese el nuevo ID de la película:", idPelicula));
            if (newId < 0) {
             return; 
                }
            String newName = JOptionPane.showInputDialog("Ingrese el nuevo nombre de la película:", name);
            if (newName == null) {
            return;
            }
            String newCategory = JOptionPane.showInputDialog("Ingrese la nueva categoría de la película:", category);
            if (newCategory == null) {
                return;
            }

            Movie.updateMovie(idPelicula, name, newCategory);
        } else if (filaSeleccionadaSala != -1) {
            int idSala = (int) tblSala.getValueAt(filaSeleccionadaSala, 0);
            int number = (int) tblSala.getValueAt(filaSeleccionadaSala, 1);
            String status = (String) tblSala.getValueAt(filaSeleccionadaSala, 2);

            int newNumber = Integer.parseInt(JOptionPane.showInputDialog("Ingrese el nuevo número de la sala:", number));
            String newStatus = JOptionPane.showInputDialog("Ingrese el nuevo estado de la sala:", status);
            if (newStatus == null) {
                return;
            }

            Sala.updateSala(idSala, newNumber, newStatus);
        } else if (filaSeleccionadaFuncion != -1) {
            int idFuncion = (int) tblFuncion.getValueAt(filaSeleccionadaFuncion, 0);
            int idSala = (int) tblFuncion.getValueAt(filaSeleccionadaFuncion, 1);
            int idMovie = (int) tblFuncion.getValueAt(filaSeleccionadaFuncion, 2);

            String newSchedule = JOptionPane.showInputDialog("Ingrese el nuevo horario de la función:");
            String newDate = JOptionPane.showInputDialog("Ingrese la nueva fecha de la función:");

            DateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
            Date parsedDate = dateFormat.parse(newDate);
            java.sql.Date sqlDate = new java.sql.Date(parsedDate.getTime());

            Time sqlTime = Time.valueOf(newSchedule + ":00");

            Funcion.updateFuncion(idFuncion, idSala, idMovie, sqlTime, sqlDate);
        } else {
            JOptionPane.showMessageDialog(this, "Seleccione una fila para actualizar.");
            return;
        }

        btnDespliegueActionPerformed(evt);
    } catch (Exception ex) {
        JOptionPane.showMessageDialog(this, "Ocurrió un error al actualizar: " + ex.getMessage());
        ex.printStackTrace(); // Imprime el seguimiento de la pila para depuración
    }
    }//GEN-LAST:event_btnUpdateActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new JForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAñadir;
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnDespliegue;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel lblCinemex;
    private javax.swing.JTable tblFuncion;
    private javax.swing.JTable tblMovie;
    private javax.swing.JTable tblSala;
    private javax.swing.JTextField txtBuscar;
    // End of variables declaration//GEN-END:variables
}
